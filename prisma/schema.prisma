generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  adminId Int   @id @default(autoincrement())
  userId  Int
  users   users @relation(fields: [userId], references: [userId], onUpdate: Restrict, map: "admins_ibfk_1")

  @@index([userId], map: "userId")
}

model appconfig {
  configId        Int    @id @default(autoincrement())
  maxSeatsPerTrip Int
  geoConfig       String @db.VarChar(255)
}

model reservations {
  reservationId   Int      @id @default(autoincrement())
  tripId          Int
  passengerId     Int
  reservationTime DateTime @db.DateTime(0)
  trips           trips    @relation(fields: [tripId], references: [tripId], onUpdate: Restrict, map: "reservations_ibfk_1")
  users           users    @relation(fields: [passengerId], references: [userId], onUpdate: Restrict, map: "reservations_ibfk_2")

  @@index([passengerId], map: "passengerId")
  @@index([tripId], map: "tripId")
}

model trips {
  tripId              Int            @id @default(autoincrement())
  departureLocation   String         @db.VarChar(100)
  destinationLocation String         @db.VarChar(100)
  departureTime       DateTime       @db.DateTime(0)
  availableSeats      Int
  driverId            Int
  reservations        reservations[]
  users               users          @relation(fields: [driverId], references: [userId], onUpdate: Restrict, map: "trips_ibfk_1")

  @@index([driverId], map: "driverId")
}

model users {
  userId       Int            @id @default(autoincrement())
  firstName    String         @db.VarChar(50)
  lastName     String         @db.VarChar(50)
  phoneNumber  String         @db.VarChar(15)
  email        String         @unique(map: "email") @db.VarChar(100)
  studentId    String         @db.VarChar(20)
  password     String         @db.VarChar(255)
  role         users_role?    @default(client)
  admins       admins[]
  reservations reservations[]
  trips        trips[]
}

enum users_role {
  client
  driver
  admin
}
